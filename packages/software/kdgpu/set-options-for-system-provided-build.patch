---
 .../vulkan_memory_allocator.cmake             | 52 ++++++++++---------
 1 file changed, 28 insertions(+), 24 deletions(-)

diff --git a/cmake/dependencies/vulkan_memory_allocator.cmake b/cmake/dependencies/vulkan_memory_allocator.cmake
index 1c1374b..8f3eccc 100644
--- a/cmake/dependencies/vulkan_memory_allocator.cmake
+++ b/cmake/dependencies/vulkan_memory_allocator.cmake
@@ -9,6 +9,7 @@
 
 find_package(vulkan-memory-allocator QUIET)
 if(NOT TARGET vulkan-memory-allocator::vulkan-memory-allocator)
+    set(GIT_VMA ON)
     FetchContent_Declare(
         vulkan_memory_allocator
         GIT_REPOSITORY https://github.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator.git
@@ -37,32 +38,35 @@ if(NOT TARGET vulkan-memory-allocator::vulkan-memory-allocator)
         vulkan-memory-allocator PUBLIC $<BUILD_INTERFACE:${vulkan_memory_allocator_SOURCE_DIR}/include>
                                        $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/KDGpu/vulkan_memory_allocator>
     )
+endif()
 
-    option(VMA_RECORDING_ENABLED "Enable VMA memory recording for debugging" OFF)
-    option(VMA_USE_STL_CONTAINERS "Use C++ STL containers instead of VMA's containers" OFF)
-    option(VMA_STATIC_VULKAN_FUNCTIONS "Link statically with Vulkan API" OFF)
-    option(VMA_DYNAMIC_VULKAN_FUNCTIONS "Fetch pointers to Vulkan functions internally (no static linking)" OFF)
-    option(VMA_DEBUG_ALWAYS_DEDICATED_MEMORY "Every allocation will have its own memory block" OFF)
-    option(VMA_DEBUG_INITIALIZE_ALLOCATIONS
-           "Automatically fill new allocations and destroyed allocations with some bit pattern" OFF
-    )
-    option(VMA_DEBUG_GLOBAL_MUTEX "Enable single mutex protecting all entry calls to the library" OFF)
-    option(VMA_DEBUG_DONT_EXCEED_MAX_MEMORY_ALLOCATION_COUNT
-           "Never exceed VkPhysicalDeviceLimits::maxMemoryAllocationCount and return error" OFF
-    )
+option(VMA_RECORDING_ENABLED "Enable VMA memory recording for debugging" OFF)
+option(VMA_USE_STL_CONTAINERS "Use C++ STL containers instead of VMA's containers" OFF)
+option(VMA_STATIC_VULKAN_FUNCTIONS "Link statically with Vulkan API" OFF)
+option(VMA_DYNAMIC_VULKAN_FUNCTIONS "Fetch pointers to Vulkan functions internally (no static linking)" OFF)
+option(VMA_DEBUG_ALWAYS_DEDICATED_MEMORY "Every allocation will have its own memory block" OFF)
+option(VMA_DEBUG_INITIALIZE_ALLOCATIONS
+       "Automatically fill new allocations and destroyed allocations with some bit pattern" OFF
+)
+option(VMA_DEBUG_GLOBAL_MUTEX "Enable single mutex protecting all entry calls to the library" OFF)
+option(VMA_DEBUG_DONT_EXCEED_MAX_MEMORY_ALLOCATION_COUNT
+       "Never exceed VkPhysicalDeviceLimits::maxMemoryAllocationCount and return error" OFF
+)
 
-    # cmake-lint: disable=C0301
-    target_compile_definitions(
-        vulkan-memory-allocator
-        PUBLIC
-            VMA_USE_STL_CONTAINERS=$<BOOL:${VMA_USE_STL_CONTAINERS}>
-            VMA_DYNAMIC_VULKAN_FUNCTIONS=$<BOOL:${VMA_DYNAMIC_VULKAN_FUNCTIONS}>
-            VMA_DEBUG_ALWAYS_DEDICATED_MEMORY=$<BOOL:${VMA_DEBUG_ALWAYS_DEDICATED_MEMORY}>
-            VMA_DEBUG_INITIALIZE_ALLOCATIONS=$<BOOL:${VMA_DEBUG_INITIALIZE_ALLOCATIONS}>
-            VMA_DEBUG_GLOBAL_MUTEX=$<BOOL:${VMA_DEBUG_GLOBAL_MUTEX}>
-            VMA_DEBUG_DONT_EXCEED_MAX_MEMORY_ALLOCATION_COUNT=$<BOOL:${VMA_DEBUG_DONT_EXCEED_MAX_MEMORY_ALLOCATION_COUNT}>
-            VMA_RECORDING_ENABLED=$<BOOL:${VMA_RECORDING_ENABLED}>
-    )
+# cmake-lint: disable=C0301
+target_compile_definitions(
+    vulkan-memory-allocator
+    PUBLIC
+        VMA_USE_STL_CONTAINERS=$<BOOL:${VMA_USE_STL_CONTAINERS}>
+        VMA_DYNAMIC_VULKAN_FUNCTIONS=$<BOOL:${VMA_DYNAMIC_VULKAN_FUNCTIONS}>
+        VMA_DEBUG_ALWAYS_DEDICATED_MEMORY=$<BOOL:${VMA_DEBUG_ALWAYS_DEDICATED_MEMORY}>
+        VMA_DEBUG_INITIALIZE_ALLOCATIONS=$<BOOL:${VMA_DEBUG_INITIALIZE_ALLOCATIONS}>
+        VMA_DEBUG_GLOBAL_MUTEX=$<BOOL:${VMA_DEBUG_GLOBAL_MUTEX}>
+        VMA_DEBUG_DONT_EXCEED_MAX_MEMORY_ALLOCATION_COUNT=$<BOOL:${VMA_DEBUG_DONT_EXCEED_MAX_MEMORY_ALLOCATION_COUNT}>
+        VMA_RECORDING_ENABLED=$<BOOL:${VMA_RECORDING_ENABLED}>
+)
+
+if (GIT_VMA)
 
     add_library(vulkan-memory-allocator::vulkan-memory-allocator ALIAS vulkan-memory-allocator)
 
-- 
2.40.1

